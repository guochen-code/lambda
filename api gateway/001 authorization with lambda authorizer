********************************************************************************************************************************
api gateway first forward the request to authorizer, if passed, it will forward the request to handler
if not passed, it will not forward the request to the handler

alternatively, we can use aws congnito - user pool
********************************************************************************************************************************

DemoHandler
---

def lambda_handler(event, context):
    print(event)
    return "hello, world!!"


DemoAuthorizer
---
def lambda_handler(event, context):
    
    #1 - Log the event
    print('*********** The event is: ***************')
    print(event)
    
    #2 - See if the person's token is valid
    if event['authorizationToken'] == 'abc123':  # keyword 'authorizationToken' is manually set up in the aws api gateway, can be customized to anything
        auth = 'Allow'
    else:
        auth = 'Deny'
    
    #3 - Construct and return the response
    authResponse = { "principalId": "abc123", "policyDocument": { "Version": "2012-10-17", "Statement": [{"Action": "execute-api:Invoke", "Resource": ["arn:aws:execute-api:us-east-1:<YOURACCOUNTNUMBER>:<api identifier>/test/GET/customers"], "Effect": auth}] }}.  # <api identifier>/*/* # give access to everything
    return authResponse
